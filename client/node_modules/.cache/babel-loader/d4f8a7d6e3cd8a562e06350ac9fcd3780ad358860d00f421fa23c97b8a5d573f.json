{"ast":null,"code":"var _jsxFileName = \"/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/UpdateBranch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BranchFinder from \"../api/BranchFinder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateBranch = () => {\n  _s();\n  const {\n    branchID\n  } = useParams();\n  const [branchName, setBranchName] = useState(\"\");\n  const [managerID, setManagerID] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchBranch = async () => {\n      try {\n        if (!branchID) {\n          setError('Branch ID is undefined');\n          return;\n        }\n        const response = await BranchFinder.get(`/${branchID}`);\n        if (response.data) {\n          setBranchName(response.data.branch_name);\n          setManagerID(response.data.manager_id);\n          setError(null);\n        } else {\n          setError('No data returned from the API');\n        }\n      } catch (err) {\n        console.error(\"Error fetching branch details:\", err);\n        setError('Failed to fetch branch details');\n      }\n    };\n    fetchBranch();\n  }, [branchID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branchName\",\n          children: \"Branch Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: branchName,\n          onChange: e => setBranchName(e.target.value),\n          id: \"branchName\",\n          className: \"form-control\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"managerID\",\n          children: \"Manager ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: managerID,\n          onChange: e => setManagerID(e.target.value),\n          id: \"managerID\",\n          className: \"form-control\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateBranch, \"msxJwRxHiOLErWqhpDNbbN3BIxE=\", false, function () {\n  return [useParams];\n});\n_c = UpdateBranch;\nexport default UpdateBranch;\nvar _c;\n$RefreshReg$(_c, \"UpdateBranch\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BranchFinder","jsxDEV","_jsxDEV","UpdateBranch","_s","branchID","branchName","setBranchName","managerID","setManagerID","error","setError","fetchBranch","response","get","data","branch_name","manager_id","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","id","type","_c","$RefreshReg$"],"sources":["/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/UpdateBranch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BranchFinder from \"../api/BranchFinder\";\n\nconst UpdateBranch = () => {\n  const { branchID } = useParams();\n  const [branchName, setBranchName] = useState(\"\");\n  const [managerID, setManagerID] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchBranch = async () => {\n      try {\n        if (!branchID) {\n          setError('Branch ID is undefined');\n          return;\n        }\n        const response = await BranchFinder.get(`/${branchID}`);\n        if (response.data) {\n          setBranchName(response.data.branch_name);\n          setManagerID(response.data.manager_id);\n          setError(null);\n        } else {\n          setError('No data returned from the API');\n        }\n      } catch (err) {\n        console.error(\"Error fetching branch details:\", err);\n        setError('Failed to fetch branch details');\n      }\n    };\n    fetchBranch();\n  }, [branchID]);\n\n  return (\n    <div className=\"container\">\n      {error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"branchName\">Branch Name</label>\n            <input\n              value={branchName}\n              onChange={e => setBranchName(e.target.value)}\n              id=\"branchName\"\n              className=\"form-control\"\n              type=\"text\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"managerID\">Manager ID</label>\n            <input\n              value={managerID}\n              onChange={e => setManagerID(e.target.value)}\n              id=\"managerID\"\n              className=\"form-control\"\n              type=\"number\"\n            />\n          </div>\n          {/* Submit button should be added only when needed */}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default UpdateBranch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}