{"ast":null,"code":"var _jsxFileName = \"/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/UpdateBranch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { BranchContext } from \"../context/BranchContext\";\nimport BranchFinder from \"../api/BranchFinder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateBranch = props => {\n  _s();\n  const {\n    branchID\n  } = useParams();\n  const {\n    branches\n  } = useContext(BranchContext);\n  const [branchName, setBranchName] = useState(\"\");\n  const [managerID, setManagerID] = useState(\"\");\n\n  // Assuming branches is populated correctly from your context or API:\n  useEffect(() => {\n    if (branches && branches.length > 0) {\n      // Assuming you want to load data for a specific branch based on branchID:\n      const branch = branches.find(branch => branch.branch_id === branchID);\n      if (branch) {\n        setBranchName(branch.branch_name);\n        setManagerID(branch.manager_id);\n      }\n    }\n  }, [branchID, branches]);\n  return (\n    /*#__PURE__*/\n    // Make sure to wrap the returned JSX in parentheses\n    _jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: branches && branches.length > 0 ? branches[0].branch_name : 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            paddingBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"branch_name\",\n            children: \"Branch Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: branchName,\n            onChange: e => setBranchName(e.target.value),\n            id: \"branch_name\" // Changed from branchID to id\n            ,\n            className: \"form-control\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            paddingBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"manager_id\",\n            children: \"Manager ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: managerID,\n            onChange: e => setManagerID(e.target.value),\n            id: \"manager_id\" // Changed from branchID to id\n            ,\n            className: \"form-control\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(UpdateBranch, \"LLzRKbPmdKjsJ6kLGkZA3h9efag=\", false, function () {\n  return [useParams];\n});\n_c = UpdateBranch;\nexport default UpdateBranch;\nvar _c;\n$RefreshReg$(_c, \"UpdateBranch\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useParams","BranchContext","BranchFinder","jsxDEV","_jsxDEV","UpdateBranch","props","_s","branchID","branches","branchName","setBranchName","managerID","setManagerID","length","branch","find","branch_id","branch_name","manager_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","action","style","paddingBottom","htmlFor","value","onChange","e","target","id","type","_c","$RefreshReg$"],"sources":["/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/UpdateBranch.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { BranchContext } from \"../context/BranchContext\"\nimport BranchFinder from \"../api/BranchFinder\"\n\nconst UpdateBranch = (props) => {\n  const { branchID } = useParams()\n  const { branches } = useContext(BranchContext)\n  const [branchName, setBranchName] = useState(\"\")\n  const [managerID, setManagerID] = useState(\"\")\n\n  // Assuming branches is populated correctly from your context or API:\n  useEffect(() => {\n    if (branches && branches.length > 0) {\n      // Assuming you want to load data for a specific branch based on branchID:\n      const branch = branches.find(branch => branch.branch_id === branchID);\n      if (branch) {\n        setBranchName(branch.branch_name);\n        setManagerID(branch.manager_id);\n      }\n    }\n  }, [branchID, branches]);\n\n  return ( // Make sure to wrap the returned JSX in parentheses\n    <div className=\"container\">\n      <h1>{branches && branches.length > 0 ? branches[0].branch_name : 'Loading...'}</h1>\n      <form action=\"\">\n        <div className=\"form-group\" style={{ paddingBottom: '20px' }}>\n          <label htmlFor=\"branch_name\">Branch Name</label>\n          <input \n            value={branchName} \n            onChange={e => setBranchName(e.target.value)} \n            id=\"branch_name\"  // Changed from branchID to id\n            className=\"form-control\" \n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\" style={{ paddingBottom: '20px' }}>\n          <label htmlFor=\"manager_id\">Manager ID</label>\n          <input \n            value={managerID}\n            onChange={e => setManagerID(e.target.value)} \n            id=\"manager_id\"  // Changed from branchID to id\n            className=\"form-control\" \n            type=\"text\"\n          />\n        </div>\n        <button className=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default UpdateBranch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}