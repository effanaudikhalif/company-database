{"ast":null,"code":"var _jsxFileName = \"/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/BranchList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport BranchFinder from \"../api/BranchFinder\";\nimport { BranchContext } from \"../context/BranchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BranchList = props => {\n  _s();\n  const {\n    branch,\n    setBranch\n  } = useContext(BranchContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await BranchFinder.get(\"/\"); // This hits \"http://localhost:4700/branch/\"\n        if (response && response.data) {\n          setBranch(response.data); // Assuming the server just returns an array\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch branch data:\", err);\n      }\n    };\n    fetchData();\n  }, [setBranch]); // Dependency array is correct now\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table-active\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Branch ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Branch Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Manager ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: branch.map(branchItem =>\n        /*#__PURE__*/\n        // Ensure 'branch' is an array\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: branchItem.branch_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: branchItem.branch_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: branchItem.manager_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, branchItem.branch_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(BranchList, \"osNb7oAMhD3riooY+JNyQ7Ch6f8=\");\n_c = BranchList;\nexport default BranchList;\nvar _c;\n$RefreshReg$(_c, \"BranchList\");","map":{"version":3,"names":["React","useContext","useEffect","BranchFinder","BranchContext","jsxDEV","_jsxDEV","BranchList","props","_s","branch","setBranch","fetchData","response","get","data","err","console","error","children","className","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","branchItem","branch_id","branch_name","manager_id","_c","$RefreshReg$"],"sources":["/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/BranchList.js"],"sourcesContent":["import React, {useContext, useEffect} from \"react\"\nimport BranchFinder from \"../api/BranchFinder\"\nimport { BranchContext } from \"../context/BranchContext\"\n\nconst BranchList = (props) => {\n  const {branch, setBranch} = useContext(BranchContext)\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await BranchFinder.get(\"/\");  // This hits \"http://localhost:4700/branch/\"\n        if (response && response.data) {\n          setBranch(response.data); // Assuming the server just returns an array\n        }\n      } catch (err) {\n        console.error(\"Failed to fetch branch data:\", err);\n      }\n    };\n    fetchData();\n  }, [setBranch])  // Dependency array is correct now\n  \n  \n  return (\n    <div>\n      <table className=\"table table-hover\">\n        <thead>\n          <tr className=\"table-active\">\n            <th scope=\"col\">Branch ID</th>\n            <th scope=\"col\">Branch Name</th>\n            <th scope=\"col\">Manager ID</th>\n          </tr>\n        </thead>\n        <tbody>\n        {branch.map((branchItem) => (  // Ensure 'branch' is an array\n          <tr key={branchItem.branch_id}>\n            <td>{branchItem.branch_id}</td>\n            <td>{branchItem.branch_name}</td>\n            <td>{branchItem.manager_id}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default BranchList\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}