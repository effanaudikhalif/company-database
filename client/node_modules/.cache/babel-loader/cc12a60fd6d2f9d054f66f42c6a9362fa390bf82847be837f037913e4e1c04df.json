{"ast":null,"code":"var _jsxFileName = \"/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/UpdateBranch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport BranchFinder from \"../api/BranchFinder\"; // Ensure this import is correct and adjust path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateBranch = () => {\n  _s();\n  const {\n    branchID\n  } = useParams();\n  const navigate = useNavigate();\n  const [branchName, setBranchName] = useState(\"\");\n  const [managerID, setManagerID] = useState(\"\");\n  useEffect(() => {\n    const fetchBranch = async () => {\n      try {\n        const response = await BranchFinder.get(`/branch/${branchID}`);\n        console.log(response.data); // Log the response data to verify structure\n        if (response.data) {\n          setBranchName(response.data.branch_name);\n          setManagerID(response.data.manager_id);\n        }\n      } catch (err) {}\n    };\n    fetchBranch();\n  }, [branchID]); // Ensure useEffect is called when branchID changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branch_name\",\n          children: \"Branch Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: branchName,\n          onChange: e => setBranchName(e.target.value),\n          id: \"branch_name\",\n          className: \"form-control\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"manager_id\",\n          children: \"Manager ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: managerID,\n          onChange: e => setManagerID(e.target.value),\n          id: \"manager_id\",\n          className: \"form-control\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateBranch, \"C3l00oIwaTuqpkdLg4l52kIwFCo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateBranch;\nexport default UpdateBranch;\nvar _c;\n$RefreshReg$(_c, \"UpdateBranch\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","BranchFinder","jsxDEV","_jsxDEV","UpdateBranch","_s","branchID","navigate","branchName","setBranchName","managerID","setManagerID","fetchBranch","response","get","console","log","data","branch_name","manager_id","err","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","id","type","_c","$RefreshReg$"],"sources":["/Users/effanaudikhalif/Desktop/CAST/company-internal/client/src/components/UpdateBranch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport BranchFinder from \"../api/BranchFinder\"; // Ensure this import is correct and adjust path if necessary\n\nconst UpdateBranch = () => {\n  const { branchID } = useParams();\n  const navigate = useNavigate();\n  const [branchName, setBranchName] = useState(\"\");\n  const [managerID, setManagerID] = useState(\"\");\n\n  useEffect(() => {\n    const fetchBranch = async () => {\n      try {\n        const response = await BranchFinder.get(`/branch/${branchID}`);\n        console.log(response.data);  // Log the response data to verify structure\n        if (response.data) {\n          setBranchName(response.data.branch_name);\n          setManagerID(response.data.manager_id);\n        }\n      } catch (err) {\n      }\n    };\n    fetchBranch();\n  }, [branchID]);  // Ensure useEffect is called when branchID changes\n  \n  \n\n  return (\n    <div className=\"container\">\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"branch_name\">Branch Name</label>\n          <input\n            value={branchName}\n            onChange={e => setBranchName(e.target.value)}\n            id=\"branch_name\"\n            className=\"form-control\"\n            type=\"text\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"manager_id\">Manager ID</label>\n          <input\n            value={managerID}\n            onChange={e => setManagerID(e.target.value)}\n            id=\"manager_id\"\n            className=\"form-control\"\n            type=\"text\"\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateBranch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}